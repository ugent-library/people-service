-- organizations

CREATE TABLE "organizations" (
  "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date_created" timestamptz NOT NULL,
  "date_updated" timestamptz NOT NULL,
  "external_id" character varying NOT NULL,
  "type" character varying NOT NULL DEFAULT 'organization',
  "acronym" character varying NULL,
  "name_eng" character varying NULL,
  "name_dut" character varying NULL,
  PRIMARY KEY ("id")
);

CREATE INDEX "organizations_acronym_idx" ON "organizations" ("acronym");

CREATE UNIQUE INDEX "organizations_external_id_key" ON "organizations" ("external_id");

CREATE INDEX "organization_type_idx" ON "organizations" ("type");

-- organization_parents

CREATE TABLE "organization_parents" (
  "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date_created" timestamptz NOT NULL,
  "date_updated" timestamptz NOT NULL,
  "parent_organization_id" bigint NOT NULL,
  "organization_id" bigint NOT NULL,
  "from" timestamptz NOT NULL,
  "until" timestamptz NULL,
  PRIMARY KEY ("id")
);

ALTER TABLE "organization_parents"
    ADD CONSTRAINT "organization_parents_organization_id_fkey"
    FOREIGN KEY ("organization_id") REFERENCES "organizations" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;

ALTER TABLE "organization_parents"
    ADD CONSTRAINT "organization_parents_parent_organization_id_fkey"
    FOREIGN KEY ("parent_organization_id") REFERENCES "organizations" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;

CREATE INDEX "organization_parents_organization_id_idx" ON "organization_parents" ("organization_id");

CREATE INDEX "organization_parents_parent_organization_id_idx" ON "organization_parents" ("parent_organization_id");

CREATE UNIQUE INDEX "organization_parents_key" ON "organization_parents" ("parent_organization_id", "organization_id", "from");

-- people

CREATE TABLE "people" (
  "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date_created" timestamptz NOT NULL,
  "date_updated" timestamptz NOT NULL,
  "external_id" character varying NOT NULL,
  "active" boolean NOT NULL DEFAULT false,
  "birth_date" character varying NULL,
  "email" character varying NULL,
  "given_name" character varying NULL,
  "name" character varying NULL,
  "family_name" character varying NULL,
  "job_category" jsonb NULL,
  "preferred_given_name" character varying NULL,
  "preferred_family_name" character varying NULL,
  "honorific_prefix" character varying NULL,
  "role" jsonb NULL,
  "settings" jsonb NULL,
  "object_class" jsonb NULL,
  "expiration_date" character varying NULL,
  "token" jsonb NULL,
  PRIMARY KEY ("id")
);

CREATE INDEX "people_active_idx" ON "people" ("active");

CREATE INDEX "people_email_idx" ON "people" ("email");

CREATE INDEX "people_family_name_idx" ON "people" ("family_name");

CREATE INDEX "people_given_name_idx" ON "people" ("given_name");

CREATE INDEX "people_name_idx" ON "people" ("name");

CREATE UNIQUE INDEX "people_key" ON "people" ("external_id");

-- organization_members

CREATE TABLE "organization_members" (
  "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date_created" timestamptz NOT NULL,
  "date_updated" timestamptz NOT NULL,
  "organization_id" bigint NOT NULL,
  "person_id" bigint NOT NULL,
  PRIMARY KEY ("id")
);

CREATE INDEX "organization_members_organization_id_idx" ON "organization_members" ("organization_id");

CREATE INDEX "organization_members_person_id_idx" ON "organization_members" ("person_id");

CREATE UNIQUE INDEX "organization_members_key" ON "organization_members" ("person_id", "organization_id");

ALTER TABLE "organization_members"
    ADD CONSTRAINT "organization_members_organization_id_fkey"
    FOREIGN KEY ("organization_id") REFERENCES "organizations" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;

ALTER TABLE "organization_members"
    ADD CONSTRAINT "organization_members_person_id_fkey"
    FOREIGN KEY ("person_id") REFERENCES "people" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;

-- person_identifiers

CREATE TABLE "person_identifiers" (
  "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date_created" timestamptz NOT NULL,
  "date_updated" timestamptz NOT NULL,
  "person_id" bigint NOT NULL,
  "value" text NOT NULL,
  PRIMARY KEY ("id")
);

ALTER TABLE "person_identifiers"
  ADD CONSTRAINT "person_identifiers_person_id_fkey"
  FOREIGN KEY ("person_id") REFERENCES "people" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;

CREATE UNIQUE INDEX "person_identifiers_key" on "person_identifiers" ("person_id", "value");

-- organization_identifiers

CREATE TABLE "organization_identifiers" (
  "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date_created" timestamptz NOT NULL,
  "date_updated" timestamptz NOT NULL,
  "organization_id" bigint NOT NULL,
  "value" text NOT NULL,
  PRIMARY KEY ("id")
);

ALTER TABLE "organization_identifiers"
  ADD CONSTRAINT "organization_identifiers_organization_id_fkey"
  FOREIGN KEY ("organization_id") REFERENCES "organizations" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;

CREATE UNIQUE INDEX "organization_identifiers_key" on "organization_identifiers" ("organization_id", "value");

-- ts vectors

CREATE EXTENSION IF NOT EXISTS unaccent;
DO
$$BEGIN
  CREATE TEXT SEARCH CONFIGURATION usimple ( COPY = simple );
EXCEPTION
  WHEN unique_violation THEN
     NULL;
END;$$;

ALTER TEXT SEARCH CONFIGURATION usimple ALTER MAPPING FOR hword, hword_part, word WITH unaccent, simple;

ALTER TABLE organizations
  ADD COLUMN IF NOT EXISTS ts_vals jsonb;

ALTER TABLE organizations
  ADD COLUMN IF NOT EXISTS ts tsvector GENERATED ALWAYS AS
	(
		to_tsvector('usimple', ts_vals)
	) STORED;

CREATE INDEX IF NOT EXISTS organizations_ts_idx ON organizations USING GIN(ts);

ALTER TABLE people
  ADD COLUMN IF NOT EXISTS ts_vals jsonb;

ALTER TABLE people
  ADD COLUMN IF NOT EXISTS ts tsvector GENERATED ALWAYS AS
  (
    to_tsvector('usimple', ts_vals)
  ) STORED;

CREATE INDEX IF NOT EXISTS people_ts_idx ON people USING GIN(ts);

---- create above / drop below ----

DROP TABLE IF EXISTS "organization_parents" CASCADE;
DROP TABLE IF EXISTS "organization_members" CASCADE;
DROP TABLE IF EXISTS "people" CASCADE;
DROP TABLE IF EXISTS "organizations" CASCADE;
DROP TABLE IF EXISTS "organization_identifiers" CASCADE;
DROP TABLE IF EXISTS "person_identifiers" CASCADE;
