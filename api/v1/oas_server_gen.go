// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AddPerson implements addPerson operation.
	//
	// Upsert a person.
	//
	// POST /add-person
	AddPerson(ctx context.Context, req *AddPersonRequest) error
	// GetPerson implements getPerson operation.
	//
	// Get a person.
	//
	// POST /get-person
	GetPerson(ctx context.Context, req *GetPersonRequest) (GetPersonRes, error)
	// SearchPeople implements searchPeople operation.
	//
	// Search people.
	//
	// POST /search-people
	SearchPeople(ctx context.Context, req *SearchPeopleRequest) (*PersonHits, error)
	// NewError creates *ErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
